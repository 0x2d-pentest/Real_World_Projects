import itertools
import argparse
from urllib.parse import quote

def generate_combinations(input_name: str, n: int) -> str:
    digits = list(range(n))
    results = []
    
    for j in range(1, len(digits) + 1):
        for comb in itertools.combinations(digits, j):
            param_pairs = [f"{input_name}=choice_{x}" for x in comb]
            query_string = "&".join(param_pairs)
            encoded_query = quote(query_string, safe='=&')
            results.append(encoded_query)
    
    return '\n'.join(results)

if __name__ == "__main__":
    parser = argparse.ArgumentParser(description='Generate URL-encoded combinations.')
    parser.add_argument('--name', type=str, required=True, help='Input name (e.g., "input_name[]")')
    parser.add_argument('--count', type=int, required=True, help='Number of choices (n)')
    parser.add_argument('--output', type=str, default='skill.lst', help='Output file path (default: skill.lst)')
    args = parser.parse_args()

    output_text = generate_combinations(args.name, args.count)
    
    with open(args.output, 'w') as f:
        f.write(output_text)
    
    print(f"Generated {output_text.count('\n') + 1} combinations, saved to: {args.output}")
